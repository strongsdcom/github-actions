on:
  workflow_call:
    secrets:
      aws-access-key-id: 
        required: true
      aws-secret-access-key:
        required: true
      aws-account:
        required: true

    inputs:
      tags:
        required: false
        type: string
        default: ''
      aws-region: 
        required: false
        type: string
        default: 'eu-north-1'
      build-args:
        required: false
        type: string
        default: ''
      ecr-name:
        required: true
        type: string

    outputs:
      release-created:
        description: "Indicates if GitHub release has been created by the action"
        value: ${{ jobs.release-please.outputs.release-created }}
      image-tag:
        description: "Docker Image tag name"
        value: ${{ inputs.tags[0] }}
      image-repository: ${{ env.REGISTRY }}

env:
  REGISTRY: ${{ secrets.aws-account }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.aws-access-key-id }}
          password: ${{ secrets.aws-secret-access-key }}
      - name: Build Tags
        id: build-tags
        shell: bash
        run: |
          origin_tags=${{ inputs.tags }} 
          tags = $(${origin_tags:-$(git rev-parse --short HEAD)} | sed 's/.*/${{ env.REGISTRY }}/${{ inputs.ecr-name }}:&/')
          echo "tags=$tags" >> $GITHUB_OUTPUT
      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: ${{ inputs.build-args }}
          push: true
          tags: ${{ steps.build-tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
