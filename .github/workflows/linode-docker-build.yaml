on:
  workflow_call:
    secrets:
      build-args:
        required: false
      registry-user:
        required: true
      registry-password:
        required: true

    inputs:
      build-args:
        required: false
        type: string
        default: ''
      environment-name:
        required: false
        type: string
        default: ''
      registry:
        required: true
        type: string
      repository:
        required: true
        type: string
      tags:
        required: false
        type: string
        default: '<<short-sha>>'

    outputs:
      image-tag:
        description: "Main Docker Image tag name"
        value: ${{ jobs.docker-build.outputs.image-tag }}
      registry:
        description: "Container Registry"
        value: ${{ jobs.docker-build.outputs.registry }}
      repository:
        description: "Docker Image Repository"
        value: ${{ jobs.docker-build.outputs.repository }}
      short-sha:
        description: "Git commit short sha"
        value: ${{ jobs.docker-build.outputs.short-sha }}

jobs:
  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ inputs.registry }}
      repository: ${{ inputs.repository }}
      image-tag: ${{ steps.build-tags.outputs.image-tag }}
      short-sha: ${{ steps.build-short-sha.outputs.short-sha }}
    environment:
      name: ${{ inputs.environment-name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build git commit short sha
        id: build-short-sha
        run: echo "short-sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Login to private registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry-user }}
          password: ${{ secrets.registry-password }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Tags
        id: build-tags
        run: |
          tags=$(echo '${{ inputs.tags }}' | awk '{$1=$1};1' | sed '/^$/d' | sed 's/<<short-sha>>/${{ steps.build-short-sha.outputs.short-sha }}/' | sed '$!N;s/\n/,/')
          image_tag=$(echo $tags | cut -d ',' -f1)
          repo_tags=$(echo $tags  | sed 's#,#\n#g' | sed 's#.*#${{ inputs.registry }}/${{ inputs.repository }}:&#' | sed '$!N;s#\n#,#')
          echo "image-tag=$image_tag" >> $GITHUB_OUTPUT
          echo "repo-tags=$repo_tags" >> $GITHUB_OUTPUT
          export DOCKER_BUILDKIT=0
      - name: Build Docker Args
        id: build-docker-build-args
        run: |
          echo 'docker_build_args<<EOF' >> $GITHUB_ENV
          echo '${{ secrets.build-args }}' | sed '/^$/d' | sed 's/<<short-sha>>/${{ steps.build-short-sha.outputs.short-sha }}/g' >> $GITHUB_ENV
          echo '${{ inputs.build-args }}' | sed '/^$/d' | sed 's/<<short-sha>>/${{ steps.build-short-sha.outputs.short-sha }}/g' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: ${{ env.docker_build_args }}
          push: true
          tags: ${{ steps.build-tags.outputs.repo-tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
