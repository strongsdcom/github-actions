name: Deploy Production

on:
  workflow_dispatch:
    inputs:
      passphrase:
        default: ""

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  PRODUCTION_URL: https://app.example.com
  RELEASE_ENV: production

jobs:
  check-git-ref-type:
    steps:
      - name: Ensure triggered by tag
        if: ${{ github.ref_type != 'tag' }}
        run: |
          echo "This action must be triggered by tag not branch"
          exit 1
  
  docker-build-production:
    uses: strongsdcom/github-actions/.github/workflows/aws-docker-build.yaml@main
    needs: check-git-ref-type
    environment:
      name: ${{ env.RELEASE_ENV }}
      url: ${{ env.PRODUCTION_URL }}
    secrets:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      aws-account: ${{ secrets.AWS_ACCOUNT }}
    with:
      build-args: |
        SENTRY_ENVIRONMENT=${{ env.RELEASE_ENV }}
        SENTRY_DSN=https://d55c6efeb9b841e791ac5dfebe96e396@o415134.ingest.sentry.io/6133152
      ecr-name: strongsdcom/app-production
      tags: |
        ${{ github.ref_name }}
        latest
  
  deploy-production:
    uses: strongsdcom/github-actions/.github/workflows/aws-eks-deploy.yaml@main
    needs: docker-build-production
    environment:
      name: ${{ env.RELEASE_ENV }}
      url: ${{ env.PRODUCTION_URL }}
    secrets:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      aws-account: ${{ secrets.AWS_ACCOUNT }}
      gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
    with:
      release-name: production-app
      helm-set-values: |
        a=1
        b=2
      helm-values: |
        ./.deploy/values/production/config.yaml
        ./.deploy/values/production/secrets.yaml
      namespace: production
      cluster-name: example-cluster
      image-tag: ${{ needs.docker-build-production.outputs.image-tag }}
      image-repository: ${{ needs.docker-build-production.outputs.image-repository }}
  
  sentry-release:
    runs-on: ubuntu-latest
    uses: strongsdcom/github-actions/.github/workflows/sentry-release.yaml@main
    needs: deploy-production
    with:
      release-name: ${{ needs.deploy-production.outputs.release-name }}
      release-env: ${{ env.RELEASE_ENV }}
      organization: ${{ env.SENTRY_ORG }}
      project: ${{ env.SENTRY_PROJECT }}
    secrets:
      auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}
    
